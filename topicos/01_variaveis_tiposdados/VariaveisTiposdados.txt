
====================================================================================================
CURSO FUNDAMENTOS KOTLIN - VARIÁVEIS E TIPOS DE DADOS
====================================================================================================


Introdução
----------------------------------------------------------------------------------------------------
Uma variável é um espaço na memória do computador utilizado para armazenar um dado. A variável é o 
recurso utilizado pelo programa de computador para armazenar o dado para posteriormente processá-lo.


Variáveis
----------------------------------------------------------------------------------------------------
Para criar uma variável na linguagem Kotlin, utiliza-se a sintaxe:

    var <identificador> = <dado>

O 'identificador' é um nome arbitrário dado a variável e deve seguir as seguintes regras:

- Deve iniciar por uma letra ou pelo caractere underscore (_)
- Não pode iniciar por um dígito numérico
- Não pode conter caracteres especiais, sinais de pontuação, colchetes ou parênteses
- Não pode conter espaços em branco para definir nomes compostos

  Obs: Kotlin é case-sensitive, ou seja, letras minúsculas são diferentes de letras maiúsculas.

O 'dado' é o conteúdo que será armazenado na variável.

No exemplo abaixo

    var name = "Fulano da Silva"

A variável 'name' será do tipo texto, dado que o conteúdo 'Fulano da Silva' é um nome de pessoa e 
um nome de pessoa é um texto.

Exemplo:

fun main() {

    // Variable declaration
    var name = "Fulano da Silva"

    // Printing variable
    println(name)

}


Tipos de dados
----------------------------------------------------------------------------------------------------
Tipos de dados disponíveis no Kotlin:

- Byte, Short, Int e Long para números inteiros
- UByte, UShort, UInt e ULong para números inteiros sem sinal
- Float e Double para números ponto-flutuante
- Boolean para valores booleanos

Kotlin permite que o tipo de dado da variável seja definido de forma explicita na declaração da
variável utilizando a sintaxe:

    var <identificador>: <tipo-do-dado> = <dado>

Por exemplo:

    var age: Byte = 18

Quando definimos o tipo da variável no momento da sua criação, podemos ter a variável sem conteúdo.
Isto é útil quando precisamos armazenar o conteúdo na variável posteriormente à sua criação.


Tipos de dados e faixas de valores
----------------------------------------------------------------------------------------------------
Números inteiros: 
- Byte: 8 bits, -128 a 127
- Short: 16 bits, -32768 a 32767
- Int: 32 bits, -2.147.483.648 (-2^31) a 2.147.483.647 (2^31 - 1)
- Long: 64 bis, -9.223.372.036.854.775.808 (-2^63) a 9.223.372.036.854.775.807 (2^63 - 1)

Números inteiros sem sinal:
- UByte: 8 bits, 0 a 255
- UShort: 16 bits, 0 a 65535
- UInt: 32 bits, 0 a 2^32 - 1
- ULong: 64 bits, 0 a 2^64 - 1

Números ponto-flutuante:
- Float: 32 bits, 24 bits significantes, 6 a 7 dígitos decimais
- Double: 64 bits, 53 bits significantes, 15 a 16 dígitos decimais

Dados booleano:
- Boolean (true e false)

Exemplo:

fun main() {

    // Numbers: Integer types
    var oneByte: Byte = 1
    var oneShort: Short = 1
    var oneInt = 1
    var oneLong = 1L
    //var byte_: Byte = 128 // não aceitará, ultrapassa o limite de 127

    // Numbers: Floating-point types
    val eFloat = 2.7182818284f // Float (valor assumido será 2.7182817)
    val eDouble = 2.7182818284 // Double
    println(eFloat)
    println(eDouble)

    // Boolean
    var active = true
    var isAlive: Boolean
    isAlive = false

    // String
    var country = "Brazil"
    var state: String = "Paraná"

}


Literais numéricos
----------------------------------------------------------------------------------------------------
Literais numéricos disponíveis no Koltin:

- Decimais: 123
- Longs: 123L
- Binários: 0b1111011
- Octal: não suportado
- Hexadecimais: 0x7B

Para facilitar a leitura de literais numéricos extensos, utiliza-se o caractere underscore (_).

  var oneMillion = 1_000_000
  var creditCardNumber = 1234_5678_9012_3456L
  var hexBytes = 0xFF_EC_DE_5E
  var bytes = 0b11010010_01101001_10010100_10010010

Exemplo:

fun main() {

    var decimal = 123
    var long = 123L
    var binary = 0b1111011  // 123 em binário
    var hexa = 0x7B         // 123 em hexadecimal
    println(decimal)
    println(long)
    println(binary)
    println(hexa)

    var oneMillion = 1_000_000
    var creditCardNumber = 1234_5678_9012_3456L
    var hexBytes = 0xFF_EC_DE_5E
    var bytes = 0b11010010_01101001_10010100_10010010
    println(oneMillion)
    println(creditCardNumber)
    println(hexBytes)
    println(bytes)
    
}


Verificando o tipo da variável
----------------------------------------------------------------------------------------------------
Para exibir o tipo de dado de uma determinada variável utiliza-se o recurso '::class.java.typeName'
logo após o nome da variável.

Exemplo:

fun main() {

    var a: Byte = 5
    println(a::class.java.typeName)

    var b: Float = 3.14f
    println(b::class.java.typeName)

    var c = "Kotlin"
    println(c::class.java.typeName)

}


Constantes
----------------------------------------------------------------------------------------------------
Constantes são variáveis que não podem ser modificadas depois de receberem um conteúdo. São criadas
utilizando a palavra-chave 'val'.

Exemplo:

fun main() {

    val PI = 3.1415f
    println(PI)

    //PI = 3.14f  // Erro

}

