
====================================================================================================
CURSO FUNDAMENTOS KOTLIN - ESTRUTURAS DE DECISÃO
====================================================================================================


Introdução
----------------------------------------------------------------------------------------------------
As estruturas de decisão permitem ao programa de computador executar ou não um determinado conjunto
de comandos de acordo com o resultado de uma expressão lógica.


Estruturas de decisão
----------------------------------------------------------------------------------------------------
Estruturas de decisão disponíveis na linguagem Kotlin:
  
  IF
  WHEN


IF
----------------------------------------------------------------------------------------------------
É útil quando um conjunto de comandos precisa ser executado mediante uma condição. Por exemplo, num
programa para cadastrar pessoas, o nome do cônjuge só será solicitado se a pessoa for casada.

A estrutura de decisão IF possui a seguinte sintaxe:

  if (<expressão-lógica>) {
    <comandos>
  } else {
    <comandos>
  } 

A expressão-lógica é uma expressão lógica construída utilizando um ou mais dos seguintes operadores
lógicos e relacionais:

Operadores lógicos:
  &&  ( e )
  ||  ( ou )
  !   ( negação )

Operadores relacionais:
  ==  ( igual )
  !=  ( não igual )
  >   ( maior que )
  <   ( menor que )
  >=  ( maior igual que )
  <=  ( menor igual que )

Exemplo:

fun main() {

    // Avaliando apenas o resultado positivo
    // ----------------------------------------------------------------------------------------------------
    val idade1 = 18
    if (idade1 >= 18) {
        println("Maior de idade")
    }

    // Avaliando o resultado positivo e negativo
    // ----------------------------------------------------------------------------------------------------
    val idade2 = 17
    if (idade2 >= 18) {
        println("Maior de idade")
    } else {
        println("Menor de idade")
    }

    // Avaliando mais de uma situação
    // ----------------------------------------------------------------------------------------------------
    val idade3 = 15
    if (idade3 >= 18) {
        println("Maior de idade")
    } else if (idade3 >= 16) {
        println("Menor de idade e pode votar")
    } else {
        println("Menor de idade e não pode votar")
    }

}


Expressão IF
----------------------------------------------------------------------------------------------------
A linguagem Kotlin oferece uma variação da estrutura de decisão IF onde o IF é utilizado como uma
expressão que retorna um valor.

Exemplo:

fun main() {

    var a = 10
    var b = 5

    var max = if (a > b) a else b
    println(max)

    a = 3
    b = 5
    max = if (a > b) {
        println("a é maior que b")
        a
    } else {
        println("b é maior que a")
        b
    }
    println(max)
    
}

  
WHEN
----------------------------------------------------------------------------------------------------
É útil quando um conjunto de comandos precisa ser executado mediante o conteúdo de uma variável. Por
exemplo, num programa para registrar o pedido de um cliente numa lanchonete.

A estrutura de decisão WHEN possui a seguinte sintaxe:

  when (<variável>) {
    <valor1> -> { <comandos> }
    <valor2> -> { <comandos> }
    <valorN> -> { <comandos> }
    else -> { <comandos> }
  }
    
Exemplo:

fun main() {

    // Avaliando conteúdo de uma variável numérica
    // ----------------------------------------------------------------------------------------------------
    val itemCardapio = 2
    when (itemCardapio) {
        1 -> println("Escolheu o item 1")
        2 -> println("Escolheu o item 2")
        3 -> println("Escolheu o item 3")
        else -> println("Item inexistente")
    }

    // Avaliando conteúdo de uma variável String
    // ----------------------------------------------------------------------------------------------------
    val color = "blue"
    when (color) {
        "red" -> println("Vermelho")
        "green" -> println("Verde")
        "blue" -> println("Azul")
        else -> println("Cor inválida")
    }

    // Avaliando range de números
    // ----------------------------------------------------------------------------------------------------
    val number = 18
    when (number) {
        in 1..10 -> println("Esta entre 1 e 10")
        in 11..20 -> println("Esta entre 11 e 20")
        !in 21..30 -> println("Não esta entre 21 e 30")
        else -> println("inválido")
    }

}

